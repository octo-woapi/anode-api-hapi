openapi: 3.0.0
info:
  title: Baby foot
  version: '1.0'
  contact:
    name: Andrea Gueugnaut
    email: gue@octo.com
servers:
  - url: 'http://localhost:3000'
paths:
  /v1/matches:
    get:
      summary: List matches
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Match'
        '206':
          description: Partial Content
          headers:
            Content-Range:
              schema:
                type: string
            Link:
              schema:
                type: string
      operationId: get-matches
      description: 'Find matches, paginated by default, with optional filters.'
      parameters:
        - schema:
            type: integer
            default: 20
          in: query
          name: limit
        - schema:
            type: integer
            default: 1
          in: query
          name: page
        - schema:
            type: string
            default: ''
            example: '-createdAt'
          in: query
          name: sort
    parameters: []
    post:
      summary: Create a match
      operationId: post-v1-matches
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Match'
          headers:
            Location:
              schema:
                type: string
                example: /v1/matches/8f4f0410-456b-485b-b17d-edf836621626
              description: ''
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                teams:
                  type: object
                  properties:
                    points:
                      type: integer
                      minimum: 0
                      maximum: 10
                    players:
                      type: array
                      minItems: 1
                      maxItems: 2
                      uniqueItems: true
                      items:
                        type: string
                    color:
                      type: string
      description: Create a match.
      parameters:
        - schema:
            type: string
            example: application/json
          in: header
          name: Content-Type
  '/v1/matches/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    put:
      summary: Fully update a match
      operationId: put-v1-matches
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Match'
          headers: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: |-
        Update and replace a match.
        You must send the whole entity otherwise it will either fail or erase existing fields.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                teams:
                  type: object
                  properties:
                    points:
                      type: integer
                      minimum: 0
                      maximum: 10
                    players:
                      type: array
                      minItems: 1
                      maxItems: 2
                      uniqueItems: true
                      items:
                        type: string
                    color:
                      type: string
    delete:
      summary: Remove a match
      operationId: delete-v1-matches
      responses:
        '204':
          description: |-
            No Content.

            The match was deleted successfully.
        '400':
          description: |-
            Bad Request.

            The ID does not have the correct format.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: |-
            Not Found.

            The requested match was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: Remove a match.
components:
  schemas:
    Match:
      title: Match
      type: object
      x-tags:
        - Match
      properties:
        id:
          type: string
        teams:
          type: array
          items:
            $ref: '#/components/schemas/Match'
        createdAt:
          $ref: '#/components/schemas/DateTime'
        updatedAt:
          $ref: '#/components/schemas/DateTime'
      required:
        - teams
    Team:
      title: Team
      type: object
      x-tags:
        - Team
      properties:
        id:
          type: string
        points:
          type: integer
        color:
          type: string
        players:
          type: array
          items:
            $ref: '#/components/schemas/Player'
        createdAt:
          $ref: '#/components/schemas/DateTime'
        updatedAt:
          $ref: '#/components/schemas/DateTime'
    Player:
      title: Player
      type: object
      x-tags:
        - Player
      properties:
        id:
          type: string
        name:
          type: string
        createdAt:
          $ref: '#/components/schemas/DateTime'
        updatedAt:
          $ref: '#/components/schemas/DateTime'
    DateTime:
      type: string
      title: DateTime
      format: date-time
    Error:
      title: Error
      type: object
      properties:
        name:
          type: string
        message:
          type: string
        details:
          type: array
          items:
            type: object
